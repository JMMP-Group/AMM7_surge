!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!!                            namelist_ref
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OPA  :  1 - run manager      (namrun)
!! namelists    2 - Domain           (namcfg, namzgr, namdom, namtsd, namcrs, namc1d, namc1d_uvd)
!!              3 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_sas)
!!                                    namsbc_cpl, namtra_qsr, namsbc_rnf,
!!                                    namsbc_apr, namsbc_ssr, namsbc_alb, namsbc_wave)
!!              4 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              5 - bottom  boundary (nambfr, nambbc, nambbl)
!!              6 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_ldfeiv, namtra_dmp)
!!              7 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              8 - Verical physics  (namzdf, namzdf_ric, namzdf_tke, namzdf_ddm, namzdf_tmx, namzdf_tmx_new)
!!              9 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb, namsto)
!!             10 - miscellaneous    (nammpp, namctl)
!!             11 - Obs & Assim      (namobs, nam_asminc)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!                   ***  Run management namelists  ***
!!======================================================================
!!   namrun       parameters of the run
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no       =       0   !  job number (no more used...)
   cn_exp      =  "ORCA2"  !  experience name
   nn_it000    =       1   !  first time step
   nn_itend    =    5475   !  last  time step (std 5475)
   nn_date0    =  010101   !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_time0    =       0   !  initial time of day in hhmm
   nn_leapy    =       0   !  Leap year calendar (1) or not (0)
   ln_rstart   = .false.   !  start from rest (F) or from a restart file (T)
      nn_euler    =    1            !  = 0 : start with forward time step if ln_rstart=T
      nn_rstctl   =    0            !  restart control ==> activated only if ln_rstart=T
      !                             !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
      !                             !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
      !                             !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in    = "restart"   !  suffix of ocean restart name (input)
      cn_ocerst_indir = "."         !  directory from which to read input ocean restarts
      cn_ocerst_out   = "restart"   !  suffix of ocean restart name (output)
      cn_ocerst_outdir= "."         !  directory in which to write output ocean restarts
   ln_iscpl    = .false.   !  cavity evolution forcing or coupling to ice sheet model
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_rst_list = .false.   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    =    5475   !  frequency of creation of a restart file (modulo referenced to 1)
   nn_stocklist = 0,0,0,0,0,0,0,0,0,0 ! List of timesteps when a restart file is to be written
   nn_write    =    5475   !  frequency of write in the output file   (modulo referenced to nn_it000)
   ln_mskland  = .false.   !  mask land points in NetCDF outputs (costly: + ~15%)
   ln_cfmeta   = .false.   !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber  = .true.    !  clobber (overwrite) an existing file
   nn_chunksz  =       0   !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
/
!
!!======================================================================
!!                      ***  Domain namelists  ***
!!======================================================================
!!   namcfg       parameters of the configuration
!!   namdom       space and time domain (bathymetry, mesh, timestep)
!!   namwad       Wetting and drying                                    (default F)
!!   namtsd       data: temperature & salinity
!!   namcrs       coarsened grid (for outputs and/or TOP)               ("key_crs")
!!   namc1d       1D configuration options                              ("key_c1d")
!!   namc1d_dyndmp 1D newtonian damping applied on currents             ("key_c1d")
!!   namc1d_uvd   1D data (currents)                                    ("key_c1d")
!!======================================================================
!
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration
!-----------------------------------------------------------------------
   ln_read_cfg = .false.   !  (=T) read the domain configuration file
      !                    !  (=F) user defined configuration  ==>>>  see usrdef(_...) modules
      cn_domcfg = "domain_cfg"         ! domain configuration filename
      !
   ln_write_cfg= .false.   !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
      !
   ln_use_jattr = .false.  !  use (T) the file attribute: open_ocean_jstart, if present
   !                       !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namdom        !   space and time domain (bathymetry, mesh, timestep)
!-----------------------------------------------------------------------
   ln_linssh   = .false.   !  =T  linear free surface  ==>>  model level are fixed in time
   nn_closea   =    0      !  remove (=0) or keep (=1) closed seas and lakes (ORCA)
   !
   nn_msh      =    0      !  create (>0) a mesh file or not (=0)
   rn_isfhmin  =    1.00   !  treshold (m) to discriminate grounding ice to floating ice
   !
   rn_rdt      = 5760.     !  time step for the dynamics (and tracer if nn_acc=0)
   rn_atfp     =    0.1    !  asselin time filter parameter
   !
   ln_crs      = .false.   !  Logical switch for coarsening module
   ln_2d        = .false.  !  (=T) run in 2D barotropic mode (no tracer processes or vertical diffusion)
/
!-----------------------------------------------------------------------
&namtsd        !   data : Temperature  & Salinity
!-----------------------------------------------------------------------
!              !  file name                 ! frequency (hours) ! variable ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                            !  (if <0  months)  !   name   !  (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_tem = 'data_1m_potential_temperature_nomask',     -1      ,'votemper',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_sal = 'data_1m_salinity_nomask'             ,     -1      ,'vosaline',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   !
   cn_dir      = './'      !  root directory for the location of the runoff files
   ln_tsd_init = .true.    !  Initialisation of ocean T & S with T & S input data (T) or not (F)
   ln_tsd_tradmp = .true.  !  damping of ocean T & S toward T & S input data (T) or not (F)
/
!-----------------------------------------------------------------------
&namwad        !   Wetting and drying                                   (default F)
!-----------------------------------------------------------------------
   ln_wd       = .false.   !  T/F activation of wetting and drying
   rn_wdmin1   =  0.1      !  Minimum wet depth on dried cells
   rn_wdmin2   =  0.01     !  Tolerance of min wet depth on dried cells
   rn_wdld     =  20.0     !  Land elevation below which wetting/drying is allowed
   nn_wdit     =  10       !  Max iterations for W/D limiter
/
!-----------------------------------------------------------------------
&namcrs        !   coarsened grid (for outputs and/or TOP)              ("key_crs")
!-----------------------------------------------------------------------
   nn_factx    = 3         !  Reduction factor of x-direction
   nn_facty    = 3         !  Reduction factor of y-direction
   nn_binref   = 0         !  Bin centering preference: NORTH or EQUAT
                           !  0, coarse grid is binned with preferential treatment of the north fold
                           !  1, coarse grid is binned with centering at the equator
                           !    Symmetry with nn_facty being odd-numbered. Asymmetry with even-numbered nn_facty.
   nn_msh_crs  = 1         !  create (=1) a mesh file or not (=0)
   nn_crs_kz   = 0         ! 0, MEAN of volume boxes
                           ! 1, MAX of boxes
                           ! 2, MIN of boxes
   ln_crs_wn   = .true.    ! wn coarsened (T) or computed using horizontal divergence ( F )
/
!-----------------------------------------------------------------------
&namc1d        !   1D configuration options                             ("key_c1d")
!-----------------------------------------------------------------------
   rn_lat1d    =      50   !  Column latitude (default at PAPA station)
   rn_lon1d    =    -145   !  Column longitude (default at PAPA station)
   ln_c1d_locpt=  .true.   ! Localization of 1D config in a grid (T) or independant point (F)
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              ("key_c1d")
!-----------------------------------------------------------------------
   ln_dyndmp   =  .false.  !  add a damping term (T) or not (F)
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 ("key_c1d")
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_ucur     = 'ucurrent'  ,         -1        ,'u_current',   .false.    , .true. , 'monthly' ,  ''      ,  'Ume'   , ''
   sn_vcur     = 'vcurrent'  ,         -1        ,'v_current',   .false.    , .true. , 'monthly' ,  ''      ,  'Vme'   , ''
!
   cn_dir        = './'    !  root directory for the location of the files
   ln_uvd_init   = .false. !  Initialisation of ocean U & V with U & V input data (T) or not (F)
   ln_uvd_dyndmp = .false. !  damping of ocean U & V toward U & V input data (T) or not (F)
/

!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***
!!======================================================================
!!   namsbc          surface boundary condition
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_isf      ice shelf melting/freezing                         (nn_isf     >0)
!!   namsbc_iscpl    coupling option between land ice model and ocean
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_alb      albedo parameters
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition (surface module)
!-----------------------------------------------------------------------
   nn_fsbc     = 5         !  frequency of surface boundary condition computation
                           !     (also = the frequency of sea-ice & iceberg model call)
                     ! Type of air-sea fluxes 
   ln_usr      = .false.   !  user defined formulation                  (T => check usrdef_sbc)
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk      = .true.    !  Bulk formulation                          (T => fill namsbc_blk )
                     ! Type of coupling (Ocean/Ice/Atmosphere) :
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
                           !  =0 no opa-sas OASIS coupling: default single executable configuration
                           !  =1 opa-sas OASIS coupling: multi executable configuration, OPA component
                           !  =2 opa-sas OASIS coupling: multi executable configuration, SAS component 
   nn_limflx = -1          !  LIM3 Multi-category heat flux formulation (use -1 if LIM3 is not used)
                           !  =-1  Use per-category fluxes, bypass redistributor, forced mode only, not yet implemented coupled
                           !  = 0  Average per-category fluxes (forced and coupled mode)
                           !  = 1  Average and redistribute per-category fluxes, forced mode only, not yet implemented coupled
                           !  = 2  Redistribute a single flux over categories (coupled mode only)
                     ! Sea-ice :
   nn_ice      = 3         !  =0 no ice boundary condition   ,
                           !  =1 use observed ice-cover      ,
                           !  =2 to 4 :  ice-model used (LIM2, LIM3 or CICE)                         ("key_lim3", "key_lim2", or "key_cice")
   nn_ice_embd = 1         !  =0 levitating ice (no mass exchange, concentration/dilution effect)
                           !  =1 levitating ice with mass and salt exchange but no presure effect
                           !  =2 embedded sea-ice (full salt and mass exchanges and pressure)
                     ! Misc. options of sbc : 
   ln_traqsr   = .true.    !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_ssr      = .true.    !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 2         !  FreshWater Budget: =0 unchecked
                           !     =1 global mean of e-p-r set to zero at each time step
                           !     =2 annual global mean of e-p-r set to zero
   ln_apr_dyn  = .false.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   ln_isf      = .false.   !  ice shelf                                 (T   => fill namsbc_isf)
   ln_wave     = .false.   !  Activate coupling with wave  (T => fill namsbc_wave)
   ln_cdgw     = .false.   !  Neutral drag coefficient read from wave model (T => ln_wave=.true. & fill namsbc_wave)
   ln_sdw      = .false.   !  Read 2D Surf Stokes Drift & Computation of 3D stokes drift (T => ln_wave=.true. & fill namsbc_wave) 
   ln_tauoc    = .false.   !  Activate ocean stress modified by external wave induced stress (T => ln_wave=.true. & fill namsbc_wave)
   ln_stcor    = .false.   !  Activate Stokes Coriolis term (T => ln_wave=.true. & ln_sdw=.true. & fill namsbc_wave)
   nn_lsm      = 0         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_utau     = 'utau'      ,        24         , 'utau'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_vtau     = 'vtau'      ,        24         , 'vtau'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_qtot     = 'qtot'      ,        24         , 'qtot'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_qsr      = 'qsr'       ,        24         , 'qsr'     , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_emp      = 'emp'       ,        24         , 'emp'     , .false.      , .false., 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the flux files
/
!-----------------------------------------------------------------------
&namsbc_blk   !   namsbc_blk  generic Bulk formula                      (ln_blk = T)
!-----------------------------------------------------------------------
!              !  file name                   ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights                              ! rotation ! land/sea mask !
!              !                              !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename                             ! pairing  ! filename      !
   sn_wndi     = 'u_10.15JUNE2009_fill'       ,         6         , 'U_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bicubic_noc.nc'   , 'Uwnd'   , ''
   sn_wndj     = 'v_10.15JUNE2009_fill'       ,         6         , 'V_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bicubic_noc.nc'   , 'Vwnd'   , ''
   sn_qsr      = 'ncar_rad.15JUNE2009_fill'   ,        24         , 'SWDN_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_qlw      = 'ncar_rad.15JUNE2009_fill'   ,        24         , 'LWDN_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_tair     = 't_10.15JUNE2009_fill'       ,         6         , 'T_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_humi     = 'q_10.15JUNE2009_fill'       ,         6         , 'Q_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_prec     = 'ncar_precip.15JUNE2009_fill',        -1         , 'PRC_MOD1',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_snow     = 'ncar_precip.15JUNE2009_fill',        -1         , 'SNOW'    ,   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_slp      = 'slp.15JUNE2009_fill'        ,         6         , 'SLP'     ,   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_tdif     = 'taudif_core'                ,        24         , 'taudif'  ,   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   !                    !  bulk algorithm :
   ln_NCAR     = .false.   ! "NCAR"      algorithm   (Large and Yeager 2008)
   ln_COARE_3p0= .false.   ! "COARE 3.0" algorithm   (Fairall et al. 2003)
   ln_COARE_3p5= .false.   ! "COARE 3.5" algorithm   (Edson et al. 2013)
   ln_ECMWF    = .false.   ! "ECMWF"     algorithm   (IFS cycle 31)
   !
   cn_dir      = './'      !  root directory for the location of the bulk files
   ln_taudif   = .false.   !  HF tau contribution: use "mean of stress module - module of the mean stress" data
   rn_zqt      = 10.       !  Air temperature and humidity reference height (m)
   rn_zu       = 10.       !  Wind vector reference height (m)
   rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
   rn_efac     = 1.        !  multiplicative factor for evaporation (0. or 1.)
   rn_vfac     = 0.        !  multiplicative factor for ocean/ice velocity
                           !  in the calculation of the wind stress (0.=absolute winds or 1.=relative winds)
   ln_Cd_L12   = .false.   !  Modify the drag ice-atm and oce-atm depending on ice concentration
                           !  This parameterization is from Lupkes et al. (JGR 2012)
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_oasis3")
!-----------------------------------------------------------------------
!                    !     description      !  multiple  !    vector   !      vector          ! vector !
!                    !                      ! categories !  reference  !    orientation       ! grids  !
! send
   sn_snd_temp   =   'weighted oce and ice' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_alb    =   'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_thick  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_crt    =   'none'                 ,    'no'    , 'spherical' , 'eastward-northward' ,  'T'
   sn_snd_co2    =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_crtw   =       'none'                 ,    'no'    ,     ''      ,         ''           , 'U,V'
   sn_snd_ifrac  =       'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_wlev   =       'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
! receive
   sn_rcv_w10m   =   'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_taumod =   'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_tau    =   'oce only'             ,    'no'    , 'cartesian' , 'eastward-northward',  'U,V'
   sn_rcv_dqnsdt =   'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_qsr    =   'oce and ice'          ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_qns    =   'oce and ice'          ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_emp    =   'conservative'         ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_rnf    =   'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_cal    =   'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_co2    =   'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_hsig   =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_iceflx =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_mslp   =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_phioc  =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_sdrfx  =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_sdrfy  =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_wper   =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_wnum   =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_wstrf  =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_wdrag  =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
!
   nn_cplmodel   =     1   !  Maximum number of models to/from which NEMO is potentialy sending/receiving data
   ln_usecplmask = .false. !  use a coupling mask file to merge data received from several models
   !                       !   -> file cplmask.nc with the float variable called cplmask (jpi,jpj,nn_cplmodel)
/
!-----------------------------------------------------------------------
&namsbc_sas    !   Stand Alone Surface boundary condition
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !  (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   l_sasread   = .TRUE.   ! Read fields in a file if .TRUE. , or initialize to 0. in sbcssm.F90 if .FALSE.
   sn_usp      = 'sas_grid_U',     120           , 'vozocrtx',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_vsp      = 'sas_grid_V',     120           , 'vomecrty',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_tem      = 'sas_grid_T',     120           , 'sosstsst',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_sal      = 'sas_grid_T',     120           , 'sosaline',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_ssh      = 'sas_grid_T',     120           , 'sossheig',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_e3t      = 'sas_grid_T',     120           , 'e3t_m'   ,   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''
   sn_frq      = 'sas_grid_T',     120           , 'frq_m'   ,   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,    ''

   ln_3d_uve   = .true.    !  specify whether we are supplying a 3D u,v and e3 field
   ln_read_frq = .false.   !  specify whether we must read frq or not
   cn_dir      = './'      !  root directory for the location of the bulk files are
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr=T)
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_chl      ='chlorophyll',        -1         , 'CHLA'    ,   .true.     , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the runoff files
   ln_qsr_rgb  = .true.    !  RGB (Red-Green-Blue) light penetration
   ln_qsr_2bd  = .false.   !  2 bands              light penetration
   ln_qsr_bio  = .false.   !  bio-model light penetration
   nn_chldta   =      1    !  RGB : Chl data (=1) or cst value (=0)
   rn_abs      =   0.58    !  RGB & 2 bands: fraction of light (rn_si1)
   rn_si0      =   0.35    !  RGB & 2 bands: shortess depth of extinction
   rn_si1      =   23.0    !  2 bands: longest depth of extinction
   ln_qsr_ice  = .true.    !  light penetration for ice-model LIM3
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs namelist surface boundary condition          (ln_rnf=T)
!-----------------------------------------------------------------------
!              !  file name           ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                      !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_rnf      = 'runoff_core_monthly',        -1         , 'sorunoff',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_cnf      = 'runoff_core_monthly',         0         , 'socoefr0',   .false.    , .true. , 'yearly'  , ''       , ''       , ''
   sn_s_rnf    = 'runoffs'            ,        24         , 'rosaline',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_t_rnf    = 'runoffs'            ,        24         , 'rotemper',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_dep_rnf  = 'runoffs'            ,         0         , 'rodepth' ,   .false.    , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the runoff files
   ln_rnf_mouth= .true.    !  specific treatment at rivers mouths
      rn_hrnf     =  15.e0    !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf  =   1.e-3   !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   rn_rfact    =   1.e0    !  multiplicative factor for runoff
   ln_rnf_depth= .false.   !  read in depth information for runoff
   ln_rnf_tem  = .false.   !  read in temperature information for runoff
   ln_rnf_sal  = .false.   !  read in salinity information for runoff
   ln_rnf_depth_ini = .false. ! compute depth at initialisation from runoff file
      rn_rnf_max  = 5.735e-4  !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
      rn_dep_max  = 150.      !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
      nn_rnf_depth_file = 0   !  create (=1) a runoff depth file or not (=0)
/
!-----------------------------------------------------------------------
&namsbc_isf    !  Top boundary layer (ISF)                              (nn_isf >0)
!-----------------------------------------------------------------------
!              ! file name ! frequency (hours) ! variable ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !           !  (if <0  months)  !   name   !  (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
! nn_isf == 4
   sn_fwfisf   = 'rnfisf'  ,         -12       ,'sowflisf',   .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
! nn_isf == 3
   sn_rnfisf   = 'rnfisf'  ,         -12       ,'sofwfisf',   .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
! nn_isf == 2 and 3
   sn_depmax_isf='rnfisf'  ,         -12       ,'sozisfmax',  .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
   sn_depmin_isf='rnfisf'  ,         -12       ,'sozisfmin',  .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
! nn_isf == 2
   sn_Leff_isf = 'rnfisf'  ,         -12       ,'Leff'    ,   .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
!
! for all case
   nn_isf      = 1         !  ice shelf melting/freezing
                           !  1 = presence of ISF    2 = bg03 parametrisation 
                           !  3 = rnf file for isf   4 = ISF fwf specified
                           !  option 1 and 4 need ln_isfcav = .true. (domzgr)
! only for nn_isf = 1 or 2
   rn_gammat0  = 1.e-4     ! gammat coefficient used in blk formula
   rn_gammas0  = 1.e-4     ! gammas coefficient used in blk formula
! only for nn_isf = 1 or 4
   rn_hisf_tbl =  30.      ! thickness of the top boundary layer    (Losh et al. 2008)
   !                       ! 0 => thickness of the tbl = thickness of the first wet cell
! only for nn_isf = 1
   nn_isfblk   = 1         ! 1 ISOMIP  like: 2 equations formulation (Hunter et al., 2006)
   !                       ! 2 ISOMIP+ like: 3 equations formulation (Asay-Davis et al., 2015)
   nn_gammablk = 1         ! 0 = cst Gammat (= gammat/s)
   !                       ! 1 = velocity dependend Gamma (u* * gammat/s)  (Jenkins et al. 2010)
   !                       ! 2 = velocity and stability dependent Gamma    (Holland et al. 1999)
/
!-----------------------------------------------------------------------
&namsbc_iscpl  !   land ice / ocean coupling option                     
!-----------------------------------------------------------------------
   nn_drown    = 10        ! number of iteration of the extrapolation loop (fill the new wet cells)
   ln_hsb      = .false.   ! activate conservation module (conservation exact after a time of rn_fiscpl)
   nn_fiscpl   = 43800     ! (number of time step) conservation period (maybe should be fix to the coupling frequencey of restart frequency)
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing           (ln_apr_dyn =T)
!-----------------------------------------------------------------------
!              ! file name ! frequency (hours) ! variable ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !           !  (if <0  months)  !   name   !  (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_apr      = 'patm'    ,         -1        ,'somslpre',   .true.    , .true. , 'yearly'  ,    ''    ,    ''    ,      ''

   cn_dir      = './'      !  root directory for the location of the bulk files
   rn_pref     = 101000.   !  reference atmospheric pressure   [N/m2]/
   ln_ref_apr  = .false.   !  ref. pressure: global mean Patm (T) or a constant (F)
   ln_apr_obc  = .false.   !  inverse barometer added to OBC ssh data
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr=T)
!-----------------------------------------------------------------------
!              ! file name ! frequency (hours) ! variable ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !           !  (if <0  months)  !   name   !   (logical) !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_sst      = 'sst_data',        24         ,  'sst'   ,    .false.  , .false., 'yearly'  ,    ''    ,    ''    ,     ''
   sn_sss      = 'sss_data',        -1         ,  'sss'   ,    .true.   , .true. , 'yearly'  ,    ''    ,    ''    ,     ''

   cn_dir      = './'      !  root directory for the location of the runoff files
   nn_sstr     =     0     !  add a retroaction term in the surface heat       flux (=1) or not (=0)
   nn_sssr     =     2     !  add a damping     term in the surface freshwater flux (=2)
                           !  or to SSS only (=1) or no damping term (=0)
   rn_dqdt     =   -40.    !  magnitude of the retroaction on temperature   [W/m2/K]
   rn_deds     =  -166.67  !  magnitude of the damping on salinity   [mm/day]
   ln_sssr_bnd =  .true.   !  flag to bound erp term (associated with nn_sssr=2)
   rn_sssr_bnd =   4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day]
/
!-----------------------------------------------------------------------
&namsbc_alb    !   albedo parameters
!-----------------------------------------------------------------------
   nn_ice_alb   =    1   !  parameterization of ice/snow albedo
                         !     0: Shine & Henderson-Sellers (JGR 1985), giving clear-sky albedo
                         !     1: "home made" based on Brandt et al. (JClim 2005) and Grenfell & Perovich (JGR 2004),
                         !        giving cloud-sky albedo
   rn_alb_sdry  =  0.85  !  dry snow albedo         : 0.80 (nn_ice_alb = 0); 0.85 (nn_ice_alb = 1); obs 0.85-0.87 (cloud-sky)
   rn_alb_smlt  =  0.75  !  melting snow albedo     : 0.65 ( '' )          ; 0.75 ( '' )          ; obs 0.72-0.82 ( '' )
   rn_alb_idry  =  0.60  !  dry ice albedo          : 0.72 ( '' )          ; 0.60 ( '' )          ; obs 0.54-0.65 ( '' )
   rn_alb_imlt  =  0.50  !  bare puddled ice albedo : 0.53 ( '' )          ; 0.50 ( '' )          ; obs 0.49-0.58 ( '' )
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model                        (ln_wave=T)
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable     ! time interp. !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name       !   (logical)  !  (T/F)  ! 'monthly' ! filename ! pairing  ! filename      !
   sn_cdg      =  'sdw_wave' ,        1          , 'drag_coeff' ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_usd      =  'sdw_wave' ,        1          , 'u_sd2d'     ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_vsd      =  'sdw_wave' ,        1          , 'v_sd2d'     ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_hsw      =  'sdw_wave' ,        1          , 'hs'         ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_wmp      =  'sdw_wave' ,        1          , 'wmp'        ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_wnum     =  'sdw_wave' ,        1          , 'wave_num'   ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_tauoc    =  'sdw_wave' ,        1          , 'wave_stress',     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
!
   cn_dir  = './'  !  root directory for the location of drag coefficient files
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters                                   (default: No iceberg)
!-----------------------------------------------------------------------
   ln_icebergs              = .false.              ! iceberg floats or not
   ln_bergdia               = .true.               ! Calculate budgets
   nn_verbose_level         = 1                    ! Turn on more verbose output if level > 0
   nn_verbose_write         = 15                   ! Timesteps between verbose messages
   nn_sample_rate           = 1                    ! Timesteps between sampling for trajectory storage
                                                   ! Initial mass required for an iceberg of each class
   rn_initial_mass          = 8.8e7, 4.1e8, 3.3e9, 1.8e10, 3.8e10, 7.5e10, 1.2e11, 2.2e11, 3.9e11, 7.4e11
                                                   ! Proportion of calving mass to apportion to each class
   rn_distribution          = 0.24, 0.12, 0.15, 0.18, 0.12, 0.07, 0.03, 0.03, 0.03, 0.02
                                                   ! Ratio between effective and real iceberg mass (non-dim)
                                                   ! i.e. number of icebergs represented at a point
   rn_mass_scaling          = 2000, 200, 50, 20, 10, 5, 2, 1, 1, 1
                                                   ! thickness of newly calved bergs (m)
   rn_initial_thickness     = 40., 67., 133., 175., 250., 250., 250., 250., 250., 250.
   rn_rho_bergs             = 850.                 ! Density of icebergs
   rn_LoW_ratio             = 1.5                  ! Initial ratio L/W for newly calved icebergs
   ln_operator_splitting    = .true.               ! Use first order operator splitting for thermodynamics
   rn_bits_erosion_fraction = 0.                   ! Fraction of erosion melt flux to divert to bergy bits
   rn_sicn_shift            = 0.                   ! Shift of sea-ice concn in erosion flux (0<sicn_shift<1)
   ln_passive_mode          = .false.              ! iceberg - ocean decoupling
   nn_test_icebergs         =  10                  ! Create test icebergs of this class (-1 = no)
                                                   ! Put a test iceberg at each gridpoint in box (lon1,lon2,lat1,lat2)
   rn_test_box              = 108.0,  116.0, -66.0, -58.0
   rn_speed_limit           = 0.                   ! CFL speed limit for a berg

!         ! file name ! frequency (hours) !   variable   ! time interp. !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!         !           !  (if <0  months)  !     name     !   (logical)  !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_icb =  'calving',       -1          , 'calvingmask',  .true.      , .true.  , 'yearly'  , ''       , ''       , ''

   cn_dir = './'
/

!!======================================================================
!!               ***  Lateral boundary condition  ***
!!======================================================================
!!   namlbc        lateral momentum boundary condition
!!   namagrif      agrif nested grid ( read by child model only )       ("key_agrif")
!!   nam_tide      Tidal forcing 
!!   nambdy        Unstructured open boundaries                         
!!   nambdy_dta    Unstructured open boundaries - external data         
!!   nambdy_tide   tidal forcing at open boundaries                     
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =    2.     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical Eqs.
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
   nn_cln_update =    3    !  baroclinic update frequency
   ln_spc_dyn    = .true.  !  use 0 as special value for dynamics
   rn_sponge_tra = 2880.   !  coefficient for tracer   sponge layer [m2/s]
   rn_sponge_dyn = 2880.   !  coefficient for dynamics sponge layer [m2/s]
   ln_chk_bathy  = .FALSE. !
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters
!-----------------------------------------------------------------------
   ln_tide     = .false.
   ln_tide_pot = .true.    !  use tidal potential forcing
   ln_tide_ramp= .false.   !
   rdttideramp =    0.     !
   clname(1)   = 'DUMMY'   !  name of constituent - all tidal components must be set in namelist_cfg
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          
!-----------------------------------------------------------------------
    ln_bdy         = .false.              !  Use unstructured open boundaries
    nb_bdy         = 0                    !  number of open boundary sets
    ln_coords_file = .true.               !  =T : read bdy coordinates from file
    cn_coords_file = 'coordinates.bdy.nc' !  bdy coordinates files
    ln_mask_file   = .false.              !  =T : read mask from file
    cn_mask_file   = ''                   !  name of mask file (if ln_mask_file=.TRUE.)
    cn_dyn2d       = 'none'               !
    nn_dyn2d_dta   =  0                   !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
                                          !  = 2, use tidal harmonic forcing data from files
                                          !  = 3, use external data AND tidal harmonic forcing
    cn_dyn3d      =  'none'               !
    nn_dyn3d_dta  =  0                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_tra        =  'none'               !
    nn_tra_dta    =  0                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_ice_lim      =  'none'             !
    nn_ice_lim_dta  =  0                  !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    rn_ice_tem      = 270.                !  lim3 only: arbitrary temperature of incoming sea ice
    rn_ice_sal      = 10.                 !  lim3 only:      --   salinity           --
    rn_ice_age      = 30.                 !  lim3 only:      --   age                --

    ln_tra_dmp    =.false.                !  open boudaries conditions for tracers
    ln_dyn3d_dmp  =.false.                !  open boundary condition for baroclinic velocities
    rn_time_dmp   =  1.                   ! Damping time scale in days
    rn_time_dmp_out =  1.                 ! Outflow damping time scale
    nn_rimwidth   = 10                    !  width of the relaxation zone
    ln_vol        = .false.               !  total volume correction (see nn_volctl parameter)
    nn_volctl     = 1                     !  = 0, the total water flux across open boundaries is zero
    nb_jpk_bdy    = -1                    ! number of levels in the bdy data (set < 0 if consistent with planned run)
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       
!-----------------------------------------------------------------------
!              !  file name      ! frequency (hours) ! variable  ! time interp.!  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                 !  (if <0  months)  !   name    !  (logical)  !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
   bn_ssh      = 'amm12_bdyT_u2d',         24        , 'sossheig',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_u2d      = 'amm12_bdyU_u2d',         24        , 'vobtcrtx',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_v2d      = 'amm12_bdyV_u2d',         24        , 'vobtcrty',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_u3d      = 'amm12_bdyU_u3d',         24        , 'vozocrtx',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_v3d      = 'amm12_bdyV_u3d',         24        , 'vomecrty',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_tem      = 'amm12_bdyT_tra',         24        , 'votemper',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
   bn_sal      = 'amm12_bdyT_tra',         24        , 'vosaline',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
! for lim2
!   bn_frld    = 'amm12_bdyT_ice',         24        , 'ileadfra',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
!   bn_hicif   = 'amm12_bdyT_ice',         24        , 'iicethic',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
!   bn_hsnif   = 'amm12_bdyT_ice',         24        , 'isnowthi',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
! for lim3
!   bn_a_i     = 'amm12_bdyT_ice',         24        , 'ileadfra',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
!   bn_ht_i    = 'amm12_bdyT_ice',         24        , 'iicethic',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''
!   bn_ht_s    = 'amm12_bdyT_ice',         24        , 'isnowthi',    .true.   , .false. ,  'daily'  ,    ''    ,   ''     ,     ''

   cn_dir      = 'bdydta/' !  root directory for the location of the bulk files
   ln_full_vel = .false.   !  
/
!-----------------------------------------------------------------------
&nambdy_tide   !  tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide          = 'bdydta/amm12_bdytide_'   !  file name root of tidal forcing files
   ln_bdytide_2ddta = .false.                   !
   ln_bdytide_conj  = .false.                   ! 
/

!!======================================================================
!!                 ***  Bottom boundary condition  ***
!!======================================================================
!!   nambfr        bottom friction
!!   nambbc        bottom temperature boundary condition
!!   nambbl        bottom boundary layer scheme                         ("key_trabbl")
!!======================================================================
!
!-----------------------------------------------------------------------
&nambfr        !   bottom friction                                      (default: linear)
!-----------------------------------------------------------------------
   nn_bfr      =    1      !  type of bottom friction :   = 0 : free slip,  = 1 : linear friction
                           !                              = 2 : nonlinear friction
   rn_bfri1    =    4.e-4  !  bottom drag coefficient (linear case)
   rn_bfri2    =    1.e-3  !  bottom drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_bfri2_max=    1.e-1  !  max. bottom drag coefficient (non linear case and ln_loglayer=T)
   rn_bfeb2    =    2.5e-3 !  bottom turbulent kinetic energy background  (m2/s2)
   rn_bfrz0    =    3.e-3  !  bottom roughness [m] if ln_loglayer=T
   ln_bfr2d    = .false.   !  horizontal variation of the bottom friction coef (read a 2D mask file )
   rn_bfrien   =    50.    !  local multiplying factor of bfr (ln_bfr2d=T)
   rn_tfri1    =    4.e-4  !  top drag coefficient (linear case)
   rn_tfri2    =    2.5e-3 !  top drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_tfri2_max=    1.e-1  !  max. top drag coefficient (non linear case and ln_loglayer=T)
   rn_tfeb2    =    0.0    !  top turbulent kinetic energy background  (m2/s2)
   rn_tfrz0    =    3.e-3  !  top roughness [m] if ln_loglayer=T
   ln_tfr2d    = .false.   !  horizontal variation of the top friction coef (read a 2D mask file )
   rn_tfrien   =   50.     !  local multiplying factor of tfr (ln_tfr2d=T)

   ln_bfrimp   = .true.    !  implicit bottom friction (requires ln_zdfexp = .false. if true)
   ln_loglayer = .false.   !  logarithmic formulation (non linear case)
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition                (default: NO)
!-----------------------------------------------------------------------
!              !  file name      ! frequency (hours) ! variable  ! time interp.!  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                 !  (if <0  months)  !   name    !  (logical)  !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_qgh      ='geothermal_heating.nc',  -12.       , 'heatflow',   .false.   , .true.  , 'yearly'  ,   ''     ,   ''     ,   ''
   !
   ln_trabbc   = .false.   !  Apply a geothermal heating at the ocean bottom
   nn_geoflx   =    2      !  geothermal heat flux: = 0 no flux
                           !     = 1 constant flux
                           !     = 2 variable flux (read in geothermal_heating.nc in mW/m2)
   rn_geoflx_cst = 86.4e-3 !  Constant value of geothermal heat flux [W/m2]
   cn_dir      = './'      !  root directory for the location of the runoff files 
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme                         ("key_trabbl")
!-----------------------------------------------------------------------
   nn_bbl_ldf  =  1        !  diffusive bbl (=1)   or not (=0)
   nn_bbl_adv  =  0        !  advective bbl (=1/2) or not (=0)
   rn_ahtbbl   =  1000.    !  lateral mixing coefficient in the bbl  [m2/s]
   rn_gambbl   =  10.      !  advective bbl coefficient                 [s]
/

!!======================================================================
!!                        Tracer (T & S ) namelists
!!======================================================================
!!   nameos           equation of state
!!   namtra_adv       advection scheme
!!   namtra_adv_mle   mixed layer eddy param. (Fox-Kemper param.)
!!   namtra_ldf       lateral diffusion scheme
!!   namtra_ldfeiv    eddy induced velocity param.
!!   namtra_dmp       T & S newtonian damping
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean physical parameters
!-----------------------------------------------------------------------
   ln_teos10   = .false.         !  = Use TEOS-10 equation of state
   ln_eos80    = .false.         !  = Use EOS80 equation of state
   ln_seos     = .false.         !  = Use simplified equation of state (S-EOS)
                                 !
   !                     ! S-EOS coefficients (ln_seos=T):
   !                             !  rd(T,S,Z)*rau0 = -a0*(1+.5*lambda*dT+mu*Z+nu*dS)*dT+b0*dS
   rn_a0       =  1.6550e-1      !  thermal expension coefficient
   rn_b0       =  7.6554e-1      !  saline  expension coefficient
   rn_lambda1  =  5.9520e-2      !  cabbeling coeff in T^2  (=0 for linear eos)
   rn_lambda2  =  7.4914e-4      !  cabbeling coeff in S^2  (=0 for linear eos)
   rn_mu1      =  1.4970e-4      !  thermobaric coeff. in T (=0 for linear eos)
   rn_mu2      =  1.1090e-5      !  thermobaric coeff. in S (=0 for linear eos)
   rn_nu       =  2.4341e-3      !  cabbeling coeff in T*S  (=0 for linear eos)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO advection)
!-----------------------------------------------------------------------
   ln_traadv_cen = .false. !  2nd order centered scheme
      nn_cen_h   =  4            !  =2/4, horizontal 2nd order CEN / 4th order CEN
      nn_cen_v   =  4            !  =2/4, vertical   2nd order CEN / 4th order COMPACT
   ln_traadv_fct = .false. !  FCT scheme
      nn_fct_h   =  2            !  =2/4, horizontal 2nd / 4th order 
      nn_fct_v   =  2            !  =2/4, vertical   2nd / COMPACT 4th order 
      nn_fct_zts =  0            !  >=1,  2nd order FCT scheme with vertical sub-timestepping
      !                          !        (number of sub-timestep = nn_fct_zts)
   ln_traadv_mus = .false. !  MUSCL scheme
      ln_mus_ups = .false.       !  use upstream scheme near river mouths
   ln_traadv_ubs = .false. !  UBS scheme
      nn_ubs_v   =  2            !  =2  , vertical 2nd order FCT / COMPACT 4th order
   ln_traadv_qck = .false. !  QUICKEST scheme
/
!-----------------------------------------------------------------------
&namtra_adv_mle !   mixed layer eddy parametrisation (Fox-Kemper param) (default: NO)
!-----------------------------------------------------------------------
   ln_mle      = .false.   ! (T) use the Mixed Layer Eddy (MLE) parameterisation
   rn_ce       = 0.06      ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_mle      = 1         ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_lf       = 5.e+3     ! typical scale of mixed layer front (meters)                      (case rn_mle=0)
   rn_time     = 172800.   ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_mle=0)
   rn_lat      = 20.       ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   nn_mld_uv   = 0         ! space interpolation of MLD at u- & v-pts (0=min,1=averaged,2=max)
   nn_conv     = 0         ! =1 no MLE in case of convection ; =0 always MLE
   rn_rho_c_mle= 0.01      ! delta rho criterion used to calculate MLD for FK
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO diffusion)
!-----------------------------------------------------------------------
   !                       !  Operator type:
   !                           !  no diffusion: set ln_traldf_lap=..._blp=F 
   ln_traldf_lap   =  .false.  !    laplacian operator
   ln_traldf_blp   =  .false.  !  bilaplacian operator
   !
   !                       !  Direction of action:
   ln_traldf_lev   =  .false.  !  iso-level
   ln_traldf_hor   =  .false.  !  horizontal (geopotential)
   ln_traldf_iso   =  .false.  !  iso-neutral (standard operator)
   ln_traldf_triad =  .false.  !  iso-neutral (triad    operator)
   !
   !		       	         !  iso-neutral options:        
   ln_traldf_msc   =  .false.  !  Method of Stabilizing Correction (both operators)
   rn_slpmax       =   0.01    !  slope limit                      (both operators)
   ln_triad_iso    =  .false.  !  pure horizontal mixing in ML              (triad only)
   rn_sw_triad     =  1        !  =1 switching triad ; =0 all 4 triads used (triad only)
   ln_botmix_triad =  .false.  !  lateral mixing on bottom                  (triad only)
   !
   !                       !  Coefficients:
   nn_aht_ijk_t    = 0         !  space/time variation of eddy coef
   !                                !   =-20 (=-30)    read in eddy_diffusivity_2D.nc (..._3D.nc) file
   !                                !   =  0           constant 
   !                                !   = 10 F(k)      =ldf_c1d 
   !                                !   = 20 F(i,j)    =ldf_c2d 
   !                                !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
   !                                !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
   !                                !   = 31 F(i,j,k,t)=F(local velocity and grid-spacing)
   rn_aht_0        = 2000.     !  lateral eddy diffusivity   (lap. operator) [m2/s]
   rn_bht_0        = 1.e+12    !  lateral eddy diffusivity (bilap. operator) [m4/s]
/
!-----------------------------------------------------------------------
&namtra_ldfeiv !   eddy induced velocity param.                         (default: NO)
!-----------------------------------------------------------------------
   ln_ldfeiv     =.false.  ! use eddy induced velocity parameterization
   ln_ldfeiv_dia =.false.  ! diagnose eiv stream function and velocities
   rn_aeiv_0     = 2000.   ! eddy induced velocity coefficient   [m2/s]
   nn_aei_ijk_t  = 21      ! space/time variation of the eiv coeficient
   !                                !   =-20 (=-30)    read in eddy_induced_velocity_2D.nc (..._3D.nc) file
   !                                !   =  0           constant 
   !                                !   = 10 F(k)      =ldf_c1d 
   !                                !   = 20 F(i,j)    =ldf_c2d 
   !                                !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
   !                                !   = 30 F(i,j,k)  =ldf_c2d + ldf_c1d
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping                      (default: NO)
!-----------------------------------------------------------------------
   ln_tradmp   =  .true.   !  add a damping termn (T) or not (F)
   nn_zdmp     =    0      !  vertical   shape =0    damping throughout the water column
                           !                   =1 no damping in the mixing layer (kz  criteria)
                           !                   =2 no damping in the mixed  layer (rho crieria)
   cn_resto    ='resto.nc' !  Name of file containing restoration coeff. field (use dmp_tools to create this)
/

!!======================================================================
!!                      ***  Dynamics namelists  ***
!!======================================================================
!!   namdyn_adv    formulation of the momentum advection
!!   namdyn_vor    advection scheme
!!   namdyn_hpg    hydrostatic pressure gradient
!!   namdyn_spg    surface pressure gradient
!!   namdyn_ldf    lateral diffusion scheme
!!======================================================================
!
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: vector form)
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form (T) or flux form (F)
   nn_dynkeg     = 0       ! scheme for grad(KE): =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2= .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false. !  flux form - 3rd order UBS      scheme
   ln_dynzad_zts = .false. !  Use (T) sub timestepping for vertical momentum advection
/
!-----------------------------------------------------------------------
&nam_vvl    !   vertical coordinate options                             (default: zstar)
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  zstar vertical coordinate
   ln_vvl_ztilde = .false.          !  ztilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor  = .false. !  ztilde near the equator
   rn_ahe3       = 0.0e0            !  thickness diffusion coefficient
   rn_rst_e3t    = 30.e0            !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  = 5.0e0            !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   = 0.9e0            !  maximum fractional e3t deformation
   ln_vvl_dbg    = .true.           !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  enstrophy conserving scheme
   ln_dynvor_ens = .false. !  energy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_een = .false. !  energy & enstrophy scheme
      nn_een_e3f = 1          ! e3f = masked averaging of e3t divided by 4 (=0) or by the sum of mask (=1)
   ln_dynvor_msk = .false. !  vorticity multiplied by fmask (=T) or not (=F) (all vorticity schemes)  ! PLEASE DO NOT ACTIVATE
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: zps)
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .false.   !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO)
!-----------------------------------------------------------------------
   ln_dynspg_exp  = .false.   ! explicit free surface
   ln_dynspg_ts   = .false.   ! split-explicit free surface
      ln_bt_fw      = .true.     ! Forward integration of barotropic Eqs.
      ln_bt_av      = .true.     ! Time filtering of barotropic variables
         nn_bt_flt     = 1          ! Time filter choice  = 0 None
         !                          !                     = 1 Boxcar over   nn_baro sub-steps
         !                          !                     = 2 Boxcar over 2*nn_baro  "    "
      ln_bt_auto    = .true.     ! Number of sub-step defined from:
         rn_bt_cmax   =  0.8        ! =T : the Maximum Courant Number allowed
         nn_baro      = 30          ! =F : the number of sub-step in rn_rdt seconds
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   !                           !  no diffusion: set ln_dynldf_lap=..._blp=F 
   ln_dynldf_lap =  .false.    !    laplacian operator
   ln_dynldf_blp =  .false.    !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_lev =  .false.    !  iso-level
   ln_dynldf_hor =  .false.    !  horizontal (geopotential)
   ln_dynldf_iso =  .false.    !  iso-neutral
   !                       !  Coefficient
   nn_ahm_ijk_t  = 0           !  space/time variation of eddy coef
   !                                !  =-30  read in eddy_viscosity_3D.nc file
   !                                !  =-20  read in eddy_viscosity_2D.nc file
   !                                !  =  0  constant 
   !                                !  = 10  F(k)=c1d
   !                                !  = 20  F(i,j)=F(grid spacing)=c2d
   !                                !  = 30  F(i,j,k)=c2d*c1d
   !                                !  = 31  F(i,j,k)=F(grid spacing and local velocity)
   !                                !  = 32  F(i,j,k)=F(local gridscale and deformation rate)
   ! Caution in 20 and 30 cases the coefficient have to be given for a 1 degree grid (~111km)
   rn_ahm_0      =  40000.     !  horizontal laplacian eddy viscosity   [m2/s]
   rn_ahm_b      =      0.     !  background eddy viscosity for ldf_iso [m2/s]
   rn_bhm_0      = 1.e+12      !  horizontal bilaplacian eddy viscosity [m4/s]
   !                       !  Smagorinsky settings (nn_ahm_ijk_t  = 32) :
   rn_csmc       = 3.5         !  Smagorinsky constant of proportionality
   rn_minfac     = 1.0         !  multiplier of theorectical lower limit
   rn_maxfac     = 1.0         !  multiplier of theorectical upper limit
/

!!======================================================================
!!             Tracers & Dynamics vertical physics namelists
!!======================================================================
!!    namzdf        vertical physics
!!    namzdf_ric    richardson number dependent vertical mixing         ("key_zdfric")
!!    namzdf_tke    TKE dependent vertical mixing                       ("key_zdftke")
!!    namzdf_gls    GLS vertical mixing                                 ("key_zdfgls")
!!    namzdf_ddm    double diffusive mixing parameterization            ("key_zdfddm")
!!    namzdf_tmx    tidal mixing parameterization                       ("key_zdftmx")
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics
!-----------------------------------------------------------------------
   rn_avm0     =   1.2e-4  !  vertical eddy viscosity   [m2/s]          (background Kz if not "key_zdfcst")
   rn_avt0     =   1.2e-5  !  vertical eddy diffusivity [m2/s]          (background Kz if not "key_zdfcst")
   nn_avb      =    0      !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0      !  horizontal shape for avtb (=1) or not (=0)
   ln_zdfevd   = .true.    !  enhanced vertical diffusion (evd) (T) or not (F)
      nn_evdm     =    0        ! evd apply on tracer (=0) or on tracer and momentum (=1)
      rn_avevd    =  100.       !  evd mixing coefficient [m2/s]
   ln_zdfnpc   = .false.   !  Non-Penetrative Convective algorithm (T) or not (F)
      nn_npc      =    1        ! frequency of application of npc
      nn_npcp     =  365        ! npc control print frequency
   ln_zdfexp   = .false.   !  time-stepping: split-explicit (T) or implicit (F) time stepping
      nn_zdfexp   =    3        ! number of sub-timestep for ln_zdfexp=T
   ln_zdfqiao  = .false.   !  Enhanced wave vertical mixing Qiao (2010) (T => ln_wave=.true. & ln_sdw=.true. & fill namsbc_wave)
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       ("key_zdfric" )
!-----------------------------------------------------------------------
   rn_avmri    =  100.e-4  !  maximum value of the vertical viscosity
   rn_alp      =    5.     !  coefficient of the parameterization
   nn_ric      =    2      !  coefficient of the parameterization
   rn_ekmfc    =    0.7    !  Factor in the Ekman depth Equation
   rn_mldmin   =    1.0    !  minimum allowable mixed-layer depth estimate (m)
   rn_mldmax   = 1000.0    !  maximum allowable mixed-layer depth estimate (m)
   rn_wtmix    =   10.0    !  vertical eddy viscosity coeff [m2/s] in the mixed-layer
   rn_wvmix    =   10.0    !  vertical eddy diffusion coeff [m2/s] in the mixed-layer
   ln_mldw     =  .true.   !  Flag to use or not the mixed layer depth param.
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  ("key_zdftke")
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-6   !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_mxl      =   2       !  mixing length: = 0 bounded by the distance to surface and bottom
                           !                 = 1 bounded by the local vertical scale factor
                           !                 = 2 first vertical derivative of mixing length bounded by 1
                           !                 = 3 as =2 with distinct disspipative an mixing length scale
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   ln_mxl0     = .true.    !  surface mixing length scale = F(wind stress) (T) or not (F)
   rn_mxl0     =   0.04    !  surface  buoyancy lenght scale minimum value
   ln_lc       = .true.    !  Langmuir cell parameterisation (Axell 2002)
   rn_lc       =   0.15    !  coef. associated to Langmuir cells
   nn_etau     =   1       !  penetration of tke below the mixed layer (ML) due to near intertial waves
                           !        = 0 no penetration
                           !        = 1 add a tke source below the ML
                           !        = 2 add a tke source just at the base of the ML
                           !        = 3 as = 1 applied on HF part of the stress           (ln_cpl=T)
   rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
   nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
                           !        = 0  constant 10 m length scale
                           !        = 1  0.5m at the equator to 30m poleward of 40 degrees
/
!-----------------------------------------------------------------------
&namzdf_gls    !   GLS vertical diffusion                               ("key_zdfgls")
!-----------------------------------------------------------------------
   rn_emin       = 1.e-7   !  minimum value of e   [m2/s2]
   rn_epsmin     = 1.e-12  !  minimum value of eps [m2/s3]
   ln_length_lim = .true.  !  limit on the dissipation rate under stable stratification (Galperin et al., 1988)
   rn_clim_galp  = 0.267   !  galperin limit
   ln_sigpsi     = .true.  !  Activate or not Burchard 2001 mods on psi schmidt number in the wb case
   rn_crban      = 100.    !  Craig and Banner 1994 constant for wb tke flux
   rn_charn      = 70000.  !  Charnock constant for wb induced roughness length
   rn_hsro       =  0.02   !  Minimum surface roughness
   rn_frac_hs    =   1.3   !  Fraction of wave height as roughness (if nn_z0_met=2)
   nn_z0_met     =     2   !  Method for surface roughness computation (0/1/2/3)
   !                             ! =3 requires ln_wave=T
   nn_bc_surf    =     1   !  surface condition (0/1=Dir/Neum)
   nn_bc_bot     =     1   !  bottom condition (0/1=Dir/Neum)
   nn_stab_func  =     2   !  stability function (0=Galp, 1= KC94, 2=CanutoA, 3=CanutoB)
   nn_clos       =     1   !  predefined closure type (0=MY82, 1=k-eps, 2=k-w, 3=Gen)
/
!-----------------------------------------------------------------------
&namzdf_ddm    !   double diffusive mixing parameterization             ("key_zdfddm")
!-----------------------------------------------------------------------
   rn_avts     = 1.e-4     !  maximum avs (vertical mixing on salinity)
   rn_hsbfr    = 1.6       !  heat/salt buoyancy flux ratio
/
!-----------------------------------------------------------------------
&namzdf_tmx    !   tidal mixing parameterization                        ("key_zdftmx")
!-----------------------------------------------------------------------
   rn_htmx     = 500.      !  vertical decay scale for turbulence (meters)
   rn_n2min    = 1.e-8     !  threshold of the Brunt-Vaisala frequency (s-1)
   rn_tfe      = 0.333     !  tidal dissipation efficiency
   rn_me       = 0.2       !  mixing efficiency
   ln_tmx_itf  = .true.    !  ITF specific parameterisation
   rn_tfe_itf  = 1.        !  ITF tidal dissipation efficiency
/
!-----------------------------------------------------------------------
&namzdf_tmx_new !   internal wave-driven mixing parameterization        ("key_zdftmx_new" & "key_zdfddm")
!-----------------------------------------------------------------------
   nn_zpyc     = 1         !  pycnocline-intensified dissipation scales as N (=1) or N^2 (=2)
   ln_mevar    = .true.    !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   = .true.    !  account for differential T/S mixing (T) or not (F)
/
!!======================================================================
!!                  ***  Miscellaneous namelists  ***
!!======================================================================
!!   nammpp            Massively Parallel Processing                    ("key_mpp_mpi)
!!   namctl            Control prints 
!!   namsto            Stochastic parametrization of EOS
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi)
!-----------------------------------------------------------------------
   cn_mpi_send =  'I'      !  mpi send/recieve type   ='S', 'B', or 'I' for standard send,
                           !  buffer blocking send or immediate non-blocking sends, resp.
   nn_buffer   =   0       !  size in bytes of exported buffer ('B' case), 0 no exportation
   ln_nnogather=  .false.  !  activate code to avoid mpi_allgather use at the northfold
   jpni        =   0       !  jpni   number of processors following i (set automatically if < 1)
   jpnj        =   0       !  jpnj   number of processors following j (set automatically if < 1)
   jpnij       =   0       !  jpnij  number of local domains (set automatically if < 1)
/
!-----------------------------------------------------------------------
&namctl        !   Control prints 
!-----------------------------------------------------------------------
   ln_ctl      = .false.   !  trends control print (expensive!)
   nn_print    =    0      !  level of print (0 no extra print)
   nn_ictls    =    0      !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0      !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0      !  start j indice of control               over a subdomain)
   nn_jctle    =    0      !  end   j indice of control
   nn_isplt    =    1      !  number of processors in i-direction
   nn_jsplt    =    1      !  number of processors in j-direction
   nn_timing   =    0      !  timing by routine activated (=1) creates timing.output file, or not (=0)
   nn_diacfl   =    0      !  Write out CFL diagnostics (=1) in cfl_diagnostics.ascii, or not (=0)
/
!-----------------------------------------------------------------------
&namsto        ! Stochastic parametrization of EOS                      (default: NO)
!-----------------------------------------------------------------------
   ln_sto_eos  = .false.   ! stochastic equation of state
   nn_sto_eos  = 1         ! number of independent random walks
   rn_eos_stdxy= 1.4       ! random walk horz. standard deviation (in grid points)
   rn_eos_stdz = 0.7       ! random walk vert. standard deviation (in grid points)
   rn_eos_tcor = 1440.     ! random walk time correlation (in timesteps)
   nn_eos_ord  = 1         ! order of autoregressive processes
   nn_eos_flt  = 0         ! passes of Laplacian filter
   rn_eos_lim  = 2.0       ! limitation factor (default = 3.0)
   ln_rststo   = .false.   ! start from mean parameter (F) or from restart file (T)
   ln_rstseed  = .true.    ! read seed of RNG from restart file
   cn_storst_in  = "restart_sto" !  suffix of stochastic parameter restart file (input)
   cn_storst_out = "restart_sto" !  suffix of stochastic parameter restart file (output)
/

!!======================================================================
!!                  ***  Diagnostics namelists  ***
!!======================================================================
!!   namtrd       dynamics and/or tracer trends                         (default F)
!!   namptr       Poleward Transport Diagnostics                        (default F)
!!   namhsb       Heat and salt budgets                                 (default F)
!!   namdiu       Cool skin and warm layer models                       (default F)
!!   namdiu       Cool skin and warm layer models                       (default F)
!!   namflo       float parameters                                      ("key_float")
!!   nam_diaharm  Harmonic analysis of tidal constituents               ("key_diaharm")
!!   namdct       transports through some sections                      ("key_diadct")
!!   nam_diatmb   Top Middle Bottom Output                              (default F)
!!   nam_dia25h   25h Mean Output                                       (default F)
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default F)
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.   ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.   ! (T) 3D momentum trend output
   ln_dyn_mxl  = .false.   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .false.   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.   ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 365       !  print frequency (ln_glo_trd=T) (unit=time step)
/
!!gm   nn_ctls     =   0       !  control surface type in mixed-layer trends (0,1 or n<jpk)
!!gm   rn_ucf      =   1.      !  unit conversion factor (=1 -> /seconds ; =86400. -> /day)
!!gm   cn_trdrst_in      = "restart_mld"   ! suffix of ocean restart name (input)
!!gm   cn_trdrst_out     = "restart_mld"   ! suffix of ocean restart name (output)
!!gm   ln_trdmld_restart = .false.         !  restart for ML diagnostics
!!gm   ln_trdmld_instant = .false.         !  flag to diagnose trends of instantantaneous or mean ML T/S
!!gm
!-----------------------------------------------------------------------
&namptr        !   Poleward Transport Diagnostic                         (default F)
!-----------------------------------------------------------------------
   ln_diaptr   = .false.   !  Poleward heat and salt transport (T) or not (F)
   ln_subbas   = .false.   !  Atlantic/Pacific/Indian basins computation (T) or not
/
!-----------------------------------------------------------------------
&namhsb        !  Heat and salt budgets                                  (default F)
!-----------------------------------------------------------------------
   ln_diahsb   = .false.   !  check the heat and salt budgets (T) or not (F)
/
!-----------------------------------------------------------------------
&namdiu        !   Cool skin and warm layer models                       (default F)
!-----------------------------------------------------------------------
   ln_diurnal      = .false.   !
   ln_diurnal_only = .false.   !
/
!-----------------------------------------------------------------------
&namflo        !   float parameters                                      ("key_float")
!-----------------------------------------------------------------------
   jpnfl       = 1         !  total number of floats during the run
   jpnnewflo   = 0         !  number of floats for the restart
   ln_rstflo   = .false.   !  float restart (T) or not (F)
   nn_writefl  =      75   !  frequency of writing in float output file
   nn_stockfl  =    5475   !  frequency of creation of the float restart file
   ln_argo     = .false.   !  Argo type floats (stay at the surface each 10 days)
   ln_flork4   = .false.   !  trajectories computed with a 4th order Runge-Kutta (T)
   !                       !  or computed with Blanke' scheme (F)
   ln_ariane   = .true.    !  Input with Ariane tool convention(T)
   ln_flo_ascii= .true.    !  Output with Ariane tool netcdf convention(F) or ascii file (T)
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents               ("key_diaharm")
!-----------------------------------------------------------------------
    nit000_han = 1         ! First time step used for harmonic analysis
    nitend_han = 75        ! Last time step used for harmonic analysis
    nstep_han  = 15        ! Time step frequency for harmonic analysis
    tname(1)   = 'M2'      ! Name of tidal constituents
    tname(2)   = 'K1'
/
!-----------------------------------------------------------------------
&namdct        ! transports through some sections                        ("key_diadct")
!-----------------------------------------------------------------------
    nn_dct     = 15        !  time step frequency for transports computing
    nn_dctwri  = 15        !  time step frequency for transports writing
    nn_secdebug= 112       !      0 : no section to debug
    !                      !     -1 : debug all section
    !                      !  0 < n : debug section number n
/
!-----------------------------------------------------------------------
&nam_diatmb    !  Top Middle Bottom Output                               (default F)
!-----------------------------------------------------------------------
   ln_diatmb   = .false.   !  Choose Top Middle and Bottom output or not
/
!-----------------------------------------------------------------------
&nam_dia25h    !  25h Mean Output                                        (default F)
!-----------------------------------------------------------------------
   ln_dia25h   = .false.   ! Choose 25h mean output or not
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings             ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i=   4       !  number of chunks in i-dimension
   nn_nchunks_j=   4       !  number of chunks in j-dimension
   nn_nchunks_k=   31      !  number of chunks in k-dimension
   !                       !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
   !                       !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
   !                       !  (F) ignore chunking information and produce netcdf3-compatible files
/

!!======================================================================
!!               ***  Observation & Assimilation  ***
!!======================================================================
!!   namobs       observation and model comparison
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!-----------------------------------------------------------------------
&namobs        !  observation usage switch
!-----------------------------------------------------------------------
   ln_diaobs   = .false.             ! Logical switch for the observation operator
   ln_t3d      = .false.             ! Logical switch for T profile observations
   ln_s3d      = .false.             ! Logical switch for S profile observations
   ln_sla      = .false.             ! Logical switch for SLA observations
   ln_sst      = .false.             ! Logical switch for SST observations
   ln_sic      = .false.             ! Logical switch for Sea Ice observations
   ln_vel3d    = .false.             ! Logical switch for velocity observations
   ln_altbias  = .false.             ! Logical switch for altimeter bias correction
   ln_nea      = .false.             ! Logical switch for rejection of observations near land
   ln_grid_global = .true.           ! Logical switch for global distribution of observations
   ln_grid_search_lookup = .false.   ! Logical switch for obs grid search w/lookup table
   ln_ignmis   = .true.              ! Logical switch for ignoring missing files
   ln_s_at_t   = .false.             ! Logical switch for computing model S at T obs if not there
   ln_sstnight = .false.             ! Logical switch for calculating night-time average for SST obs
! All of the *files* variables below are arrays. Use namelist_cfg to add more files
   cn_profbfiles = 'profiles_01.nc'  ! Profile feedback input observation file names
   cn_slafbfiles = 'sla_01.nc'       ! SLA feedback input observation file names
   cn_sstfbfiles = 'sst_01.nc'       ! SST feedback input observation file names
   cn_sicfbfiles = 'sic_01.nc'       ! SIC feedback input observation file names
   cn_velfbfiles = 'vel_01.nc'       ! Velocity feedback input observation file names
   cn_altbiasfile = 'altbias.nc'     ! Altimeter bias input file name
   cn_gridsearchfile='gridsearch.nc' ! Grid search file name
   rn_gridsearchres = 0.5            ! Grid search resolution
   rn_dobsini  = 00010101.000000     ! Initial date in window YYYYMMDD.HHMMSS
   rn_dobsend  = 00010102.000000     ! Final date in window YYYYMMDD.HHMMSS
   nn_1dint    = 0                   ! Type of vertical interpolation method
   nn_2dint    = 0                   ! Type of horizontal interpolation method
   nn_msshc    = 0                   ! MSSH correction scheme
   rn_mdtcorr  = 1.61                ! MDT  correction
   rn_mdtcutoff = 65.0               ! MDT cutoff for computed correction
   nn_profdavtypes = -1              ! Profile daily average types - array
   ln_sstbias  = .false.             !
   cn_sstbias_files = 'sstbias.nc'   !
/
!-----------------------------------------------------------------------
&nam_asminc    !   assimilation increments                              ('key_asminc')
!-----------------------------------------------------------------------
    ln_bkgwri  = .false.   !  Logical switch for writing out background state
    ln_trainc  = .false.   !  Logical switch for applying tracer increments
    ln_dyninc  = .false.   !  Logical switch for applying velocity increments
    ln_sshinc  = .false.   !  Logical switch for applying SSH increments
    ln_asmdin  = .false.   !  Logical switch for Direct Initialization (DI)
    ln_asmiau  = .false.   !  Logical switch for Incremental Analysis Updating (IAU)
    nitbkg     = 0         !  Timestep of background in [0,nitend-nit000-1]
    nitdin     = 0         !  Timestep of background for DI in [0,nitend-nit000-1]
    nitiaustr  = 1         !  Timestep of start of IAU interval in [0,nitend-nit000-1]
    nitiaufin  = 15        !  Timestep of end of IAU interval in [0,nitend-nit000-1]
    niaufn     = 0         !  Type of IAU weighting function
    ln_salfix  = .false.   !  Logical switch for ensuring that the sa > salfixmin
    salfixmin  = -9999     !  Minimum salinity after applying the increments
    nn_divdmp  = 0         !  Number of iterations of divergence damping operator
/
