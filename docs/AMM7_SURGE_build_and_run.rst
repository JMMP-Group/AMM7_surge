
.. _AMM7_SURGE_build_and_run-label:

************************************************
Setting up and running the NEMO AMM7 surge model
************************************************

This recipe describes how to build NEMO and XIOS appropriate for a surge model.
For simplicity, in this example meteorological forcing is switched off.
The method for generating the tidal boundary conditions is given. The method for
generating the domain file (i.e. the grid and bathymetry) is not given. However
the tidal boundary conditions and domain configuration file can be downloaded elsewhere.


1) Get NEMO codebase
====================

Login to ARCHER ::

  ssh -l $USER login.archer2.ac.uk

Define some paths ::

  export CONFIG=AMM7_SURGE
  export WORK=/work/n01/n01
  export WDIR=/work/n01/n01/$USER/$CONFIG
  export INPUTS=$WDIR/INPUTS
  #export START_FILES=$WDIR/START_FILES
  export EXP=$WDIR/EXP00
  export CDIR=$WDIR/NEMO_4.0.4_surge/cfgs # compile location is down here


Clone the repository ::

  cd $WORK/$USER
  git clone https://github.com/JMMP-Group/AMM7_surge.git $CONFIG

Get the code (you need access to the code.metoffice.gov.uk repo)::

  cd $WDIR
  #svn co http://forge.ipsl.jussieu.fr/nemo/svn/branches/UKMO/dev_r8814_surge_modelling_Nemo4/NEMOGCM dev_r8814_surge_modelling_Nemo4
  svn --username jeffpolton co https://code.metoffice.gov.uk/svn/nemo/NEMO/branches/UKMO/NEMO_4.0.4_surge/

Make a link between where the version control files are and where the compile expects them ::

    ln -s $WDIR/EXPREF $CDIR/$CONFIG/EXPREF

   
Put files from git repo into ``MY_SRC`` (Actually this is empty)::

  #rsync -vt $WDIR/MY_SRC/* $CDIR/$CONFIG/MY_SRC

Make a link between binaries and where they are expected to be found::

    mkdir $EXP
    ln -s $INPUTS $EXP/bdydta
    ln -s $INPUTS/coordinates.bdy.nc $EXP/coordinates.bdy.nc
    ln -s $INPUTS/bfr_coef.nc $EXP/.

Copy required files (namelists, xml files etc) from reference experiment into experiment directory::

   cp $WDIR/EXPREF/* $EXP/.

The remaining setup instructions are machine dependent and beyond scope.

As an example the following process has been used on ARCHER2 using XIOS2 and the CRAY compiler (valid at 5th Jan 2024)

Get compiler option files using a shared XIOS2 install

  cd $CDIR/..
  cp /work/n01/shared/nemo/ARCH/*4.2.fcm arch/NOC/.

Load some modules::

  module swap craype-network-ofi craype-network-ucx
  module swap cray-mpich cray-mpich-ucx
  module load cray-hdf5-parallel/1.12.2.1
  module load cray-netcdf-hdf5parallel/4.9.0.1


Link xios executable to the EXP directory::

  ln -s /work/n01/shared/nemo/XIOS2_Cray/bin/xios_server.exe $EXP/xios_server.exe

Compile NEMO::

  cd $CDIR
  echo "AMM7_SURGE OCE" >> ref_cfgs.txt
  cd $CDIR/..
  ./makenemo -m X86_ARCHER2-Cray_4.2 -r AMM7_SURGE -j 16


Copy executable to experiment directory ::

  ln -s $CDIR/$CONFIG/BLD/bin/nemo.exe $EXP/nemo

(N.B. sometimes the executable is expected to be called `opa` or `nemo.exe`)



4) Generate a domain configuration file
========================================

Copy a domain file that holds all the coordinates and domain discretisation.
This files is called ``domain_cfg.nc``. The generation of this file is not
described here. Obtain the file E.g. ::

  ln -s $INPUTS/domain_cfg.nc $EXP/amm7_surge_domain_cfg.nc


5) Generate tidal boundary conditions
======================================

The tidal boundary conditions were generated from the FES2014 tidal model with a tool called PyNEMO.
At this time the version of PyNEMO did not support outputting only 2D tidal forcing,
so some of the error checking for 3D boundary conditions is not needed but has
to be satisfied. This is how it was done. A new version of PyNEMO now exists.
The boundary data are stored in ``$INPUTS``

See **generate tidal boundaries** page.

6) Summary of external requirements
===================================

To successfully run NEMO will expect a ``coordinates.bdy.nc`` file in `$INPUTS`
(generated by PyNEMO) it will also expect boundary files of the type::

  AMM7_surge_bdytide_rotT_*.nc
  amm7_bdytide_*.nc

E.g. ``AMM7_surge_bdytide_rotT_M2_grid_V.nc`` and ``amm7_bdytide_M2_grid_T.nc``

There must also be a ``domain_cfg.nc`` domain file in ``$EXP``.


7) Run NEMO
===========

Finally we are ready to submit a run script job from the experiment directory.
Edit the runscript.

Submit::

  cd $EXP
  cp ../EXPREF/runscrupt.slurm .
  sbatch runscript.slurm

Sea surface height is output every 15 mins.


**5 Jan'24. Namelists tested for tide only**

NB I spent a long time debugging an error that was hard to trace when an expected namelist variable (a filename) was not initialised. Made harder since file was not even needed.

NB2: Need to tidy these docs
